package com.tngus2sh.baekjoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/**
 * 구간 합 구하기2 / 
 * https://www.acmicpc.net/problem/10999
 */

public class q10999 {
	public static void main(String[] args) throws IOException {
		// 중간에 수의 변경이 일어남
		// 그 이후 어떤 부분의 합을 구해야함
		
		/*
		 * 누적합(S) 생성
		 * 수의개수(N) 수의변경이일어나는횟수(M) 구간의합(K) 을 입력받는다.
		 * for(0~N) { N개의 수 입력 받기; 누적 합 더하기; }
		 * for(0~M+K) a b c 입력받기
		 * 		if(a가 1인 경우) { d를 추가로 입력받기, b번째 수부터 c번째 수에 d를 더하기 }
		 * 		if(a가 2인 경우) { b번째 수부터 c번째 수의 합 } 
		 */
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		StringBuilder sb = new StringBuilder();
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		
		int[] S = new int[N+1];
		
		for(int i = 1 ; i <= N; i++) {
			S[i] = S[i-1] + Integer.parseInt(br.readLine());
		}
		
		for(int i = 0; i < M+K; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			int c = Integer.parseInt(st.nextToken());
			
			if(a == 1) {
				// d를 추가로 입력받기
				int d = Integer.parseInt(st.nextToken());
				int idx = 2;
				S[b] += d;
				for(int j = b+1; j <= N; j++) {
					S[j] = S[j-1] + (d * idx);
					if(idx == c-b+2) {
						continue;
					} else {
						idx++;
					}
				}
			} else if(a == 2) {
				// b번째 수부터 c번째 수의 합
				sb.append(S[c] - S[b-1]).append("\n");
			}
		}
		
		System.out.println(sb);
		
	}
}
